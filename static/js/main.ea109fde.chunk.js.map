{"version":3,"sources":["app/components/ImageBlock/ImageBlock.module.scss","app/App.module.scss","static/images/derevo_planeta_zvezdy_galaktika_art_117068_1280x1024.jpg","static/images/image.jpg","static/images/gory_derevya_dal_sneg_oblaka_115484_1920x1080.jpg","static/images/gory_sneg_vershina_84607_1920x1080.jpg","static/images/mountain_range_himalayas_mountains_sky_fog_103464_1920x1080.jpg","static/images/pejzazh_gory_ozero_160353_1280x1024.jpg","serviceWorker.js","app/components/ImageBlock/ImageBlock.jsx","app/components/ImageBlock/const/const.js","app/App.jsx","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","ImageBlock","image","id","idx","maxItems","rotateChange","set","handleCount","React","useState","rotate","setRotate","useEffect","className","styles","container","onClick","display","locking","style","card","transform","content","background","imageBlock","src","alt","IMAGES","order","require","App","itemsSelected","setItemsSelected","randomOrders","setRandomOrders","stepCounter","setStepCounter","randomNumbers","length","number","Math","round","random","includes","push","arr","map","item","sort","a","b","addItem","concat","setTimeout","counter","block","key","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.ea109fde.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ImageBlock_container__1xuNN\",\"card\":\"ImageBlock_card__2uN1i\",\"content\":\"ImageBlock_content__3L22g\",\"imageBlock\":\"ImageBlock_imageBlock__24a4k\",\"image\":\"ImageBlock_image__3cQCZ\",\"display\":\"ImageBlock_display__1WSr1\",\"locking\":\"ImageBlock_locking__3p1wS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__MiK3W\",\"counter\":\"App_counter__2rRNS\",\"block\":\"App_block__bMh6G\"};","module.exports = __webpack_public_path__ + \"static/media/derevo_planeta_zvezdy_galaktika_art_117068_1280x1024.fca6f398.jpg\";","module.exports = __webpack_public_path__ + \"static/media/image.ca1da7ca.jpg\";","module.exports = __webpack_public_path__ + \"static/media/gory_derevya_dal_sneg_oblaka_115484_1920x1080.b3bef548.jpg\";","module.exports = __webpack_public_path__ + \"static/media/gory_sneg_vershina_84607_1920x1080.0b51f8bd.jpg\";","module.exports = __webpack_public_path__ + \"static/media/mountain_range_himalayas_mountains_sky_fog_103464_1920x1080.3240acb2.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pejzazh_gory_ozero_160353_1280x1024.5f3f085f.jpg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. app is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { useEffect } from 'react';\nimport styles from './ImageBlock.module.scss';\n\nconst ImageBlock = ({ image, id, idx, maxItems, rotateChange, set, handleCount }) => {\n  \n  const [rotate, setRotate] = React.useState(false);\n  \n  const handleBlock = () => {\n    setRotate(true);\n  }\n  \n  useEffect(() => {\n    setRotate(rotateChange);\n  }, [rotateChange]);\n  \n  const handleCounter = () => {\n    if (!rotate) {\n      handleCount(id, set);\n    }\n  }\n  \n  return (\n    <div className={styles.container} onClick={handleCounter}>\n      <div className={`${styles.display} ${rotate && styles.locking}`} style={maxItems ? {display: 'block'} : null}></div>\n      <div className={styles.card} onClick={handleBlock} style={rotate ? {transform: `rotateY(180deg)`} : null}>\n        <div className={styles.content} style={maxItems ? {background: '#DC5D61'} : null}>\n          { idx }\n        </div>\n        <div className={styles.imageBlock}>\n          <img src={image} className={styles.image}  alt='card'/>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default ImageBlock;","export const IMAGES = [\n  {\n    id: 1,\n    set: 1,\n    order: 1,\n    image: require('../../../../static/images/derevo_planeta_zvezdy_galaktika_art_117068_1280x1024.jpg'),\n  },\n  {\n    id: 2,\n    set: 2,\n    order: 2,\n    image: require('../../../../static/images/image.jpg'),\n  },\n  {\n    id: 3,\n    set: 3,\n    order: 3,\n    image: require('../../../../static/images/gory_derevya_dal_sneg_oblaka_115484_1920x1080.jpg'),\n  },\n  {\n    id: 4,\n    set: 4,\n    order: 4,\n    image: require('../../../../static/images/gory_sneg_vershina_84607_1920x1080.jpg'),\n  },\n  {\n    id: 5,\n    set: 5,\n    order: 5,\n    image: require('../../../../static/images/mountain_range_himalayas_mountains_sky_fog_103464_1920x1080.jpg'),\n  },\n  {\n    id: 6,\n    set: 6,\n    order: 6,\n    image: require('../../../../static/images/pejzazh_gory_ozero_160353_1280x1024.jpg'),\n  },\n  {\n    id: 7,\n    set: 1,\n    order: 7,\n    image: require('../../../../static/images/derevo_planeta_zvezdy_galaktika_art_117068_1280x1024.jpg'),\n  },\n  {\n    id: 8,\n    set: 2,\n    order: 120,\n    image: require('../../../../static/images/image.jpg'),\n  },\n  {\n    id: 9,\n    set: 3,\n    order: 9,\n    image: require('../../../../static/images/gory_derevya_dal_sneg_oblaka_115484_1920x1080.jpg'),\n  },\n  {\n    id: 10,\n    set: 4,\n    order: 10,\n    image: require('../../../../static/images/gory_sneg_vershina_84607_1920x1080.jpg'),\n  },\n  {\n    id: 11,\n    set: 5,\n    order: 11,\n    image: require('../../../../static/images/mountain_range_himalayas_mountains_sky_fog_103464_1920x1080.jpg'),\n  },\n  {\n    id: 12,\n    set: 6,\n    order: 12,\n    image: require('../../../../static/images/pejzazh_gory_ozero_160353_1280x1024.jpg'),\n  },\n]","import React, { useEffect } from 'react';\nimport styles from './App.module.scss';\nimport ImageBlock from \"./components/ImageBlock/ImageBlock\";\nimport { IMAGES } from \"./components/ImageBlock/const/const\";\n\nconst App = () => {\n  \n  const [itemsSelected, setItemsSelected] = React.useState([]);\n  \n  const [randomOrders, setRandomOrders] = React.useState([]);\n  \n  const [stepCounter, setStepCounter] = React.useState(0);\n  \n  const randomNumbers = [];\n  \n  useEffect(() => {\n    if (itemsSelected.length === 2) {\n      setStepCounter(stepCounter + 1);\n    }\n  }, [itemsSelected.length]);\n  \n  useEffect(() => {\n    while (randomNumbers.length < 13) {\n      const number = Math.round(Math.random() * IMAGES.length);\n      \n      if (!randomNumbers.includes(number)) {\n        randomNumbers.push(number);\n      }\n    }\n  \n    const arr = IMAGES.map((item, idx) => {\n      return {\n        ...item,\n        order: randomNumbers[idx],\n      }\n    });\n  \n    setRandomOrders(arr.sort((a, b) => a.order - b.order));\n  }, []);\n  \n  const handleCount = (id, set) => {\n    const addItem = [];\n    \n    if (itemsSelected.length) {\n      if (itemsSelected[0].id === id) {\n        return\n      }\n    }\n  \n    if (id && itemsSelected && itemsSelected.length <= 1) {\n      addItem.push({id, set});\n    }\n  \n    setItemsSelected(itemsSelected.concat(addItem));\n  }\n  \n  useEffect(() => {\n    setTimeout(() => {\n      if (itemsSelected.length && itemsSelected.length === 2) {\n        setItemsSelected([]);\n      }\n    }, 2000);\n  }, [itemsSelected.length]);\n  \n  return (\n    <div className={styles.container}>\n      <div className={styles.counter}>Steps: {stepCounter}</div>\n      \n      <div className={styles.block}>\n        {randomOrders &&\n          randomOrders.map((item, idx) => {\n            if (itemsSelected.length && itemsSelected.length === 2) {\n              if ((itemsSelected[0].set !== itemsSelected[1].set) && (itemsSelected[0].id === item.id || itemsSelected[1].id === item.id)) {\n                return (\n                  <ImageBlock\n                    {...item}\n                    key={item.id}\n                    idx={idx + 1}\n                    rotateChange={() => setTimeout(() => false, 2000)}\n                    maxItems={itemsSelected && itemsSelected.length === 2}\n                    handleCount={handleCount}\n                  />\n                )\n              }\n            }\n            return (\n              <ImageBlock\n                {...item}\n                key={item.id}\n                idx={idx + 1}\n                maxItems={itemsSelected && itemsSelected.length === 2}\n                handleCount={handleCount}\n              />\n            )\n          })\n        }\n      </div>\n    </div>\n  )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport App from \"./app/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}